/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => MaterialSymbolsPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var MaterialSymbolsPlugin = class extends import_obsidian.Plugin {
  async onload() {
    this.addCommand({
      id: "add-symbol",
      name: "Add symbol",
      editorCallback: (editor, view) => {
        let position = editor.getCursor("from");
        editor.replaceSelection('<span class="mso"></span>');
        editor.setCursor({
          line: position.line,
          ch: position.ch + 18
          // opening tag has 18 characters
        });
      }
    });
    this.addCommand({
      id: "add-symbol-single-quotes",
      name: "Add symbol (class single-quoted)",
      editorCallback: (editor, view) => {
        let preInsertPosition = editor.getCursor("from");
        editor.replaceSelection("<span class='mso'></span>");
        editor.setCursor({
          line: preInsertPosition.line,
          ch: preInsertPosition.ch + 18
          // opening tag has 18 characters
        });
      }
    });
  }
  onunload() {
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHtFZGl0b3IsIE1hcmtkb3duVmlldywgUGx1Z2lufSBmcm9tICdvYnNpZGlhbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1hdGVyaWFsU3ltYm9sc1BsdWdpbiBleHRlbmRzIFBsdWdpbiB7XG5cdGFzeW5jIG9ubG9hZCgpIHtcblx0XHR0aGlzLmFkZENvbW1hbmQoe1xuXHRcdFx0aWQ6ICdhZGQtc3ltYm9sJyxcblx0XHRcdG5hbWU6ICdBZGQgc3ltYm9sJyxcblx0XHRcdGVkaXRvckNhbGxiYWNrOiAoZWRpdG9yOiBFZGl0b3IsIHZpZXc6IE1hcmtkb3duVmlldykgPT4ge1xuXHRcdFx0XHRsZXQgcG9zaXRpb24gPSBlZGl0b3IuZ2V0Q3Vyc29yKCdmcm9tJylcblx0XHRcdFx0Ly8gYWRkIGljb25cblx0XHRcdFx0ZWRpdG9yLnJlcGxhY2VTZWxlY3Rpb24oJzxzcGFuIGNsYXNzPVwibXNvXCI+PC9zcGFuPicpO1xuXHRcdFx0XHQvLyBtb3ZlIGN1cnNvciBpbnRvIHRoZSB0YWdcblx0XHRcdFx0ZWRpdG9yLnNldEN1cnNvcih7XG5cdFx0XHRcdFx0bGluZTogcG9zaXRpb24ubGluZSxcblx0XHRcdFx0XHRjaDogcG9zaXRpb24uY2ggKyAxOCAvLyBvcGVuaW5nIHRhZyBoYXMgMTggY2hhcmFjdGVyc1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdHRoaXMuYWRkQ29tbWFuZCh7XG5cdFx0XHRpZDogJ2FkZC1zeW1ib2wtc2luZ2xlLXF1b3RlcycsXG5cdFx0XHRuYW1lOiAnQWRkIHN5bWJvbCAoY2xhc3Mgc2luZ2xlLXF1b3RlZCknLFxuXHRcdFx0ZWRpdG9yQ2FsbGJhY2s6IChlZGl0b3I6IEVkaXRvciwgdmlldzogTWFya2Rvd25WaWV3KSA9PiB7XG5cdFx0XHRcdGxldCBwcmVJbnNlcnRQb3NpdGlvbiA9IGVkaXRvci5nZXRDdXJzb3IoJ2Zyb20nKVxuXHRcdFx0XHQvLyBhZGQgaWNvblxuXHRcdFx0XHRlZGl0b3IucmVwbGFjZVNlbGVjdGlvbihcIjxzcGFuIGNsYXNzPSdtc28nPjwvc3Bhbj5cIik7XG5cdFx0XHRcdC8vIG1vdmUgY3Vyc29yIGludG8gdGhlIHRhZ1xuXHRcdFx0XHRlZGl0b3Iuc2V0Q3Vyc29yKHtcblx0XHRcdFx0XHRsaW5lOiBwcmVJbnNlcnRQb3NpdGlvbi5saW5lLFxuXHRcdFx0XHRcdGNoOiBwcmVJbnNlcnRQb3NpdGlvbi5jaCArIDE4IC8vIG9wZW5pbmcgdGFnIGhhcyAxOCBjaGFyYWN0ZXJzXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9XG5cblx0b251bmxvYWQoKSB7XG5cdFx0Ly8gZG8gbm90aGluZ1xuXHR9XG59XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0JBQTJDO0FBRTNDLElBQXFCLHdCQUFyQixjQUFtRCx1QkFBTztBQUFBLEVBQ3pELE1BQU0sU0FBUztBQUNkLFNBQUssV0FBVztBQUFBLE1BQ2YsSUFBSTtBQUFBLE1BQ0osTUFBTTtBQUFBLE1BQ04sZ0JBQWdCLENBQUMsUUFBZ0IsU0FBdUI7QUFDdkQsWUFBSSxXQUFXLE9BQU8sVUFBVSxNQUFNO0FBRXRDLGVBQU8saUJBQWlCLDJCQUEyQjtBQUVuRCxlQUFPLFVBQVU7QUFBQSxVQUNoQixNQUFNLFNBQVM7QUFBQSxVQUNmLElBQUksU0FBUyxLQUFLO0FBQUE7QUFBQSxRQUNuQixDQUFDO0FBQUEsTUFDRjtBQUFBLElBQ0QsQ0FBQztBQUVELFNBQUssV0FBVztBQUFBLE1BQ2YsSUFBSTtBQUFBLE1BQ0osTUFBTTtBQUFBLE1BQ04sZ0JBQWdCLENBQUMsUUFBZ0IsU0FBdUI7QUFDdkQsWUFBSSxvQkFBb0IsT0FBTyxVQUFVLE1BQU07QUFFL0MsZUFBTyxpQkFBaUIsMkJBQTJCO0FBRW5ELGVBQU8sVUFBVTtBQUFBLFVBQ2hCLE1BQU0sa0JBQWtCO0FBQUEsVUFDeEIsSUFBSSxrQkFBa0IsS0FBSztBQUFBO0FBQUEsUUFDNUIsQ0FBQztBQUFBLE1BQ0Y7QUFBQSxJQUNELENBQUM7QUFBQSxFQUNGO0FBQUEsRUFFQSxXQUFXO0FBQUEsRUFFWDtBQUNEOyIsCiAgIm5hbWVzIjogW10KfQo=
